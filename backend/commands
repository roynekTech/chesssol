cd ~/public_html/chesssol/backend/chess-engine

# Download source zip
wget https://github.com/official-stockfish/Stockfish/archive/refs/tags/sf_16.zip

# Unzip it
unzip sf_16.zip

# Move into the Stockfish directory
cd Stockfish-sf_16/src

make build ARCH=x86-64
# g++ -O3 -fno-exceptions -fno-rtti -std=c++17 *.cpp -o stockfish

./stockfish
#TODO: if it works, end it and more to the next


https://github.com/official-stockfish/Stockfish/archive/refs/tags/sf_15.1.zip
https://github.com/official-stockfish/Stockfish/archive/refs/tags/sf_15.zip
https://github.com/official-stockfish/Stockfish/archive/refs/tags/sf_14.zip

https://github.com/official-stockfish/Stockfish/archive/refs/tags/sf_13.zip
https://github.com/official-stockfish/Stockfish/archive/refs/tags/sf_12.zip
https://github.com/official-stockfish/Stockfish/archive/refs/tags/sf_11.zip

https://github.com/official-stockfish/Stockfish/archive/refs/tags/sf_10.zip
https://github.com/official-stockfish/Stockfish/archive/refs/tags/sf_9.zip
https://github.com/official-stockfish/Stockfish/archive/refs/tags/sf_7.zip




#################################################

scp /path/to/local/file username@192.168.1.100:/path/on/remote/
scp ./package.json root@192.168.1.100:/var/www/project/

🔐 
scp -i ~/.ssh/my-key.pem ./package.json username@host:/destination/


cp -r -f ./backend/ ./new-backend/
mv -f source_folder/* destination_folder/


cp -r -f chesssol-backend/backend/chess-engine/ chesssol/backend/chess-engine/


#####################################################


# let wsUrl = 'ws://localhost:3000/chesssol/backend/ws';

# let wsUrl = `ws://20.208.128.130:3000/chesssol/backend/ws`;
# let wsUrl = 'wss://chesssol.com/api/chesssol/backend/ws';

# let wsUrl = `ws://20.208.128.130:3000/chesssol/backend/ws`;

let wsUrl = 'ws://localhost:3000/chesssol/backend/ws';

let socket = new WebSocket(wsUrl);

socket.addEventListener('open', () => {
    console.log('Connected to game server');
});

socket.addEventListener('message', (event) => {
    const data = JSON.parse(event.data);
    console.log(data);
});

socket.addEventListener('close', () => {
    console.log('Disconnected from server');
});

socket.addEventListener('error', (error) => {
    console.log('WebSocket error: ' + error.message);
});

socket.send(JSON.stringify({
    type: 'listGames',
}));



socket.send(JSON.stringify({
    type: 'create',
}));

# socket.send(JSON.stringify({
#     type: 'create',
#     // client: playerId,
#     walletAddress: playerId,
#     signature: null //placholder for the signature to confirm ownership of wallet address
# }));


cd /var/www/chessol-frontend
git pull origin main
npm install
npm run build


git reset --hard HEAD           # Discards all local changes



cd chesssol
git pull origin main
pm2 restart chesssol-app

mysql -u chesssol_user -p chesssol_db